import os
from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import httpx
import traceback # On importe le module de traceback

# --- Configuration ---
APP_VERSION = "1.5" # Nouvelle version de débogage
OOBABOOGA_API_URL = os.getenv("OOBABOOGA_API_URL", "http://192.168.199.78:5000/v1")

# ... (le reste de la config, app, CORS, etc. ne change pas) ...
# --- Structures de Données ---
class UserInput(BaseModel):
    message: str
    history: list = []

# ...

@app.post("/chat")
async def handle_chat(user_input: UserInput):
    # ... (la construction de conversation_history ne change pas) ...

    oobabooga_payload = {
        "model": "L3.3-70B-Magnum-Diamond-Q5_K_S.gguf",
        "messages": conversation_history,
        "max_tokens": 500,
        "temperature": 0.7,
        "stream": False
    }

    print(f"--- [DEBUG] Payload envoyé à Oobabooga : {oobabooga_payload} ---")

    try:
        # On définit un timeout plus long et explicite
        timeout = httpx.Timeout(60.0, connect=10.0)
        
        async with httpx.AsyncClient(timeout=timeout) as client:
            print(f"--- [DEBUG] Appel de POST sur {OOBABOOGA_API_URL}/chat/completions ---")
            response = await client.post(f"{OOBABOOGA_API_URL}/chat/completions", json=oobabooga_payload)
            print(f"--- [DEBUG] Réponse reçue d'Oobabooga. Statut : {response.status_code} ---")
            
            response.raise_for_status() # Lève une exception pour les codes 4xx/5xx
            
            ai_response = response.json()
            lisa_message = ai_response["choices"][0]["message"]["content"]
            return {"reply": lisa_message}

    except Exception as exc:
        # C'est la partie la plus importante. On log l'erreur complète.
        full_traceback = traceback.format_exc()
        error_details = f"Exception type: {type(exc).__name__}, Message: {exc}, Traceback: {full_traceback}"
        print(f"--- [ERREUR] --- {error_details}")
        raise HTTPException(status_code=500, detail=error_details)
        
        
        